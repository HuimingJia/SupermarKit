upstream puma {
  server unix:///home/deploy/apps/SupermarKit/shared/tmp/sockets/SupermarKit-puma.sock;
}

server {
    server_name status.supermarkit.org;
    listen 443 ssl;

    location / {
        proxy_pass http://localhost:19999;
    }
}

server {
  listen 80 default_server deferred;
  # server_name example.com;

  listen                                443 default ssl;
  ssl_certificate                       /etc/letsencrypt/live/supermarkit.io/fullchain.pem;
  ssl_certificate_key                   /etc/letsencrypt/live/supermarkit.io/privkey.pem;
  ssl_dhparam                           /etc/ssl/certs/dhparam.pem;
  ssl_ciphers                           'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
  ssl_protocols                         TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers             on;
  ssl_session_cache                     shared:SSL:10m;
  ssl_session_tickets                   off; # Requires nginx >= 1.5.9
  ssl_stapling                          on; # Requires nginx >= 1.3.7
  ssl_stapling_verify                   on; # Requires nginx => 1.3.7

  root /home/deploy/apps/SupermarKit/current/public;
  access_log /home/deploy/apps/SupermarKit/current/log/nginx.access.log;
  error_log /home/deploy/apps/SupermarKit/current/log/nginx.error.log info;

  location ^~ /assets/ {
    # Compression

    # Enable Gzip compressed.
    gzip on;

    # Enable compression both for HTTP/1.0 and HTTP/1.1.
    gzip_http_version  1.1;

    # Compression level (1-9).
    # 5 is a perfect compromise between size and cpu usage, offering about
    # 75% reduction for most ascii files (almost identical to level 9).
    gzip_comp_level    5;

    # Don't compress anything that's already small and unlikely to shrink much
    # if at all (the default is 20 bytes, which is bad as that usually leads to
    # larger files after gzipping).
    gzip_min_length    256;

    # Compress data even for clients that are connecting to us via proxies,
    # identified by the "Via" header (required for CloudFront).
    gzip_proxied       any;

    # Tell proxies to cache both the gzipped and regular version of a resource
    # whenever the client's Accept-Encoding capabilities header varies;
    # Avoids the issue where a non-gzip capable client (which is extremely rare
    # today) would display gibberish if their proxy gave them the gzipped version.
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
     application/atom+xml
     application/javascript
     application/json
     application/rss+xml
     application/vnd.ms-fontobject
     application/x-font-ttf
     application/x-javascript
     application/x-web-app-manifest+json
     application/xhtml+xml
     application/xml
     font/opentype
     image/svg+xml
     image/x-icon
     text/css
     text/plain
     text/javascript
     text/x-component;
    # text/html is always compressed by HttpGzipModule
    expires max;
    add_header Cache-Control public;
    add_header Access-Control-Allow-Origin *;
  }

  try_files $uri/index.html $uri @puma;
  location @puma {
    add_header Strict-Transport-Security  "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options            DENY;
    add_header X-Content-Type-Options     nosniff;
    proxy_set_header X-Forwarded-Proto    $scheme;
    proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
    proxy_set_header Host                 $http_host;
    proxy_redirect                        off;
    proxy_pass                            http://puma;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 10M;
  keepalive_timeout 10;
}
