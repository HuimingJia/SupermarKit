:coffee
  @grocery_id = #{@grocery.id}

.container.groceries-show
  - unless @grocery.finished?
    .row.add-items
      .columns.large-12
        = simple_form_for :items, url: add_grocery_items_path(@grocery), method: :patch, remote: true do |f|
          .row.collapse.postfix-round
            .columns.large-12
              = f.input :ids, label: false, class: 'add-input'
              = f.button :submit, 'Add', class: 'add-button postfix'

  .row
    .columns.large-8{ class: @grocery.finished? ? 'large-centered' : '' }
      .widget
        .header
          %h3
            Groceries for
            %strong=@grocery.name
        .main
          .row
            .columns.large-12
              %table#grocery-table.display.responsive.nowrap
                %thead
                  %tr
                    %th ID
                    %th Name
                    %th Description
                    %th Quantity
                    %th Price per Item
                    %th Total Price
                    %th Actions
                %tfoot
                  %tr
                    %th.text-right{colspan: 6}
                      Total:
                    %th
          .row
            .columns.large-12
              - if @grocery.finished?
                %h3 All Finished!
                %p Groceries for this list have already been purchased. You can re-open the list at any time.
              - else
                %h3 Been through checkout?
                %p Once you have purchased your groceries you can finish your list and we'll start a new one for you.
          .row
            .columns.large-12
              - if @grocery.finished?
                = simple_form_for :finish, url: reopen_grocery_path(@grocery), method: :patch do |f|
                  = f.button :submit, 'Re-open List', class: 'button'
              - else
                = link_to '#', data: { 'reveal-id' => 'carry-over-modal' }, class: 'button success inline' do
                  Finish List
                  %i.fa.fa-check

    - unless @grocery.finished?
      .columns.large-4
        .row
          .columns.large-12
            .widget.email
              .header
                %h3 Email Groceries
              .main
                %p
                  Tell the team! At any point you can email everyone in your Kit the grocery list.
                = link_to 'Send to group', email_group_grocery_path(@grocery), class: 'button'
      .columns.large-4
        .row
          .columns.large-12
            .widget.management
              .header
                %h3 Kit Management
              .main
                %p View Kit statistics, manage users and view past lists all in one place.
                = link_to 'Manage Kit', @grocery.user_group, class: 'button'
 
  -# Modals

  #carry-over-modal.reveal-modal{ "data-reveal" => "", role: "dialog" }
    .row
      .columns.large-12
        %h2.modalTitle Congrats.
        %p You've bought your groceries! We'll now finish your current list and set up a new one. Drag over any items that you would like to get on your next list and make sure to remove all items from your current list that you did not end up buying.
    .row.drag-items
      .columns.large-6
        %h3 Current list
        .drag.left
      .columns.large-6
        %h3 Next list
        .drag.right
    .row.done
      .columns.large-12
        = link_to 'Continue', '#', id: 'carry', data: { 'reveal-id' => 'new-list-modal' }, class: 'button'
    = link_to '#', class: 'close-reveal-modal' do
      = fa_icon 'remove'
  
  #new-list-modal.reveal-modal.tiny{ "data-reveal" => "", role: "dialog" }
    .row
      .columns.large-12
        %h2.modalTitle New Grocery List.
        %p We're almost done, now just specify any details for your next list.
        = simple_form_for :finish, url: finish_grocery_path(@grocery), method: :patch do |f|
          .row
            .columns.large-10.large-centered
              = f.input :name, input_html: { value: "#{Date.today.strftime('%A')}'s List - #{Date.today}" }
              = f.input :description, as: :text
              = f.button :submit, 'Create', class: 'button radius'
              = f.input :current_ids, as: :hidden
              = f.input :next_ids, as: :hidden
    = link_to '#', class: 'close-reveal-modal' do
      = fa_icon 'remove'
